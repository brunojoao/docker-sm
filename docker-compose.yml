# Use root/example as user/password credentials
version: "3.1"

services:
  portainer:
    image: portainer/portainer-ce
    container_name: sdock_portainer_1
    restart: always
    ports:
      - 9999:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  db-mysql-host:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-db-mysql-host
    image: brunojoao3/docker-sm:mysql-5.7.31
    container_name: db-mysql-5.7
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306

  db-mysql8-host:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-db-mysql8-host
    image: brunojoao3/docker-sm:mysql-8.0.32
    container_name: db-mysql-8.0
    restart: always
    volumes:
      - mysql8_data:/var/lib/mysql
    ports:
      - 3307:3306

  supermonitor-hkm:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php5-6
    user: "root"
    container_name: supermonitor-hkm
    depends_on:
      - db-mysql-host
    volumes:
      - ../projects/supermonitor-hkm:/var/www/html
      - ./dockerfiles/configs/php5.6/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./dockerfiles/configs/php5.6/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./dockerfiles/configs/php5.6/ports.conf:/etc/apache2/ports.conf
    ports:
      - "8080:80"

  supermonitor-smart:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php5-6
    user: "root"
    container_name: supermonitor-smart
    ports:
      - "8081:80"
    depends_on:
      - db-mysql-host
    volumes:
      - ../projects/supermonitor-smart:/var/www/html
      - ./dockerfiles/configs/php5.6/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./dockerfiles/configs/php5.6/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./dockerfiles/configs/php5.6/ports.conf:/etc/apache2/ports.conf

  php5.6:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php5-6
    image: brunojoao3/docker-sm:php-5.6-apache
    user: "root"
    container_name: php5-projects
    ports:
      - 8080:8080
    volumes:
      - ../projects/supermonitor-hkm:/var/www/html/supermonitor-hkm
      - ../projects/supermonitor-smart:/var/www/html/supermonitor-smart
      - ../projects/gateway-payment-essentia:/var/www/html/gateway-payment-essentia
      - ./dockerfiles/configs/php5.6/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./dockerfiles/configs/php5.6/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./dockerfiles/configs/php5.6/ports.conf:/etc/apache2/ports.conf
    links:
      - db-mysql-host
    extra_hosts:
      - "injetaveis.docker.local:172.20.0.7"
      - "injetaveis-cron.docker.local:172.20.0.7"
      - "gerenciador-compras.local:172.20.0.8"

  php7.4:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php7-4
    image: brunojoao3/docker-sm:php-7.4-apache
    user: "root"
    container_name: php7-projects
    ports:
      - 8081:8081
    volumes:
      - ../projects/injetaveisadmin:/var/www/html/injetaveisadmin
      - ../projects/injetaveiscron:/var/www/html/injetaveiscron
      - ../projects/sm-tracking:/var/www/html/sm-tracking
      - ./dockerfiles/configs/php7.4/php.ini:/usr/local/etc/php/conf.d/local.ini
      - ./dockerfiles/configs/php7.4/000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - ./dockerfiles/configs/php7.4/ports.conf:/etc/apache2/ports.conf
    links:
      - db-mysql-host
    extra_hosts:
      - "sm-hkm.docker.local:172.20.0.6"
      - "sm-smart.docker.local:172.20.0.6"
      - "gpe.docker.local:172.20.0.6"
      - "gerenciador-compras.local:172.20.0.8"

  selfcheckout:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php8-3
    user: 'root'
    container_name: selfcheckout
    ports:
      - '8082:80'
      - '5173:5173'
    volumes:
      - '../projects/selfcheckout:/var/www/html'
      - './dockerfiles/configs/php8.3/php.ini:/usr/local/etc/php/conf.d/local.ini'
      - './dockerfiles/configs/php8.3/000-default.conf:/etc/apache2/sites-enabled/000-default.conf'
      - './dockerfiles/configs/php8.3/ports.conf:/etc/apache2/ports.conf'
    depends_on:
      - db-mysql-host
      - supermonitor-hkm
    command: >
      sh -c "apache2-foreground & npm run dev"

  gecom:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php8-3
    user: 'root'
    container_name: gecom
    ports:
      - '8083:80'
      - '5174:5173'
    volumes:
      - '../projects/gerenciador-compras:/var/www/html'
      - './dockerfiles/configs/php8.3/php.ini:/usr/local/etc/php/conf.d/local.ini'
      - './dockerfiles/configs/php8.3/000-default.conf:/etc/apache2/sites-enabled/000-default.conf'
      - './dockerfiles/configs/php8.3/ports.conf:/etc/apache2/ports.conf'
    links:
      - db-mysql8-host
    extra_hosts:
      - 'gecom.docker.local:172.20.0.9'
    command: >
      sh -c "apache2-foreground & npm run dev"

  ultramonitor:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-php8-3
    user: 'root'
    container_name: ultramonitor
    ports:
      - '8084:80'
      - '5175:5173'
    volumes:
      - '../projects/ultramonitor:/var/www/html'
      - './dockerfiles/configs/php8.3/php.ini:/usr/local/etc/php/conf.d/local.ini'
      - './dockerfiles/configs/php8.3/000-default.conf:/etc/apache2/sites-enabled/000-default.conf'
      - './dockerfiles/configs/php8.3/ports.conf:/etc/apache2/ports.conf'
    links:
      - db-mysql8-host
    extra_hosts:
      - 'ultramonitor.docker.local:172.20.0.10'
      - 'gpe.docker.local:172.20.0.6'
      - 'selfcheckout.docker.local:172.20.0.8'
      - 'injetaveis.docker.local:172.20.0.7'
      - 'injetaveis-cron.docker.local:172.20.0.7'

  node-projects:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-alpine-node
    image: brunojoao3/docker-sm:alpine-node
    container_name: node-projects
    ports:
      - 8090:8090
    volumes:
      - ../projects/api-monitor:/home/node/app/api-monitor
    command: sh -c "tail -f /dev/null"

  node-socket-sm-hkm:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-socket-sm
    image: brunojoao3/docker-sm:socket-sm-12.22.9
    container_name: socket_sm_hkm
    ports:
      - 3003:3003
    volumes:
      - ../projects/node_server_sm_hkm:/home/node/app
    command: sh -c "npm update && npm start index.js"

  node-socket-sm-smart:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-socket-sm
    image: brunojoao3/docker-sm:socket-sm-12.22.9
    container_name: socket_sm_smart
    ports:
      - 3004:3004
    volumes:
      - ../projects/node_server_sm_smart:/home/node/app
    command: sh -c "npm update && npm start index.js"

  node-socket-injetaveis:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-socket-inj
    image: brunojoao3/docker-sm:socket-inj-12.22.9
    user: "root"
    container_name: socket_injetaveis
    ports:
      - 3005:3005
    volumes:
      - ../projects/node_server_injetaveis:/home/node/app

  cy-sm-hkm:
    build:
      context: ./dockerfiles
      dockerfile: Dockerfile-cypress
    container_name: cy-sm-hkm
    image: brunojoao3/docker-sm:cy-sm-hkm
    working_dir: /e2e
    environment:
      - DISPLAY=${DISPLAY} # espelha o valor do display do server (host) para o client (container)
    volumes:
      - ../projects/cy-sm-hkm:/e2e
      - /dev/shm:/dev/shm # necessário para execução no modo headless
    extra_hosts:
      - "sm-hkm.docker.local:172.20.0.6"
      - "sm-smart.docker.local:172.20.0.6"
      - "gpe.docker.local:172.20.0.6"
      - "gerenciador-compras.local:172.20.0.8"
    network_mode: host

  reverse-proxy:
    image: caddy/caddy:2-alpine
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
#      - $PWD/dockerfiles/configs/caddy/Caddyfile:/etc/caddy/Caddyfile
#      - $PWD/certs:/data/certs

volumes:
  mysql_data:
  mysql8_data:
  portainer_data:
  jenkins_home:
  caddy_data:
  caddy_config: